name: Build and Publish Snap for Multiple Architectures

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        arch: [ amd64, arm64, armhf ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        run: sudo apt-get install -y qemu-user-static # Enables multi-arch builds

#      - name: Install Go
#        run: |
#          GO_VERSION=1.23.3
#          wget https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz
#          sudo tar -C /usr/local -xzf go${GO_VERSION}.linux-amd64.tar.gz
#          echo "export PATH=$PATH:/usr/local/go/bin" >> $GITHUB_ENV
#
#          - name: Set Go environment for architecture
#            run: |
#              echo "export GOOS=linux" >> $GITHUB_ENV
#              if [ "${{ matrix.arch }}" == "amd64" ]; then
#                echo "export GOARCH=amd64" >> $GITHUB_ENV
#              elif [ "${{ matrix.arch }}" == "arm64" ]; then
#                echo "export GOARCH=arm64" >> $GITHUB_ENV
#              elif [ "${{ matrix.arch }}" == "armhf" ]; then
#                echo "export GOARCH=arm" >> $GITHUB_ENV
#              fi
      - name: Set up Snapcraft
        run: |
          sudo snap install snapcraft --classic
          sudo snap install multipass --classic

      - name: Build Snap
        uses: diddlesnaps/snapcraft-multiarch-action@v1
        with:
          architecture: ${{ matrix.arch }}

#      - name: Build Snap
#        env:
#          SNAPCRAFT_BUILD_ENVIRONMENT: host
#        run: |
#          snapcraft clean
#          snapcraft --destructive-mode --target-arch=${{ matrix.arch }}

      - uses: actions/upload-artifact@v4
        with:
          name: mgit-${{ matrix.arch }}
          path: mgit_*.snap

#      - name: Authenticate with Snap Store
#        env:
#          SNAPCRAFT_LOGIN_FILE: ${{ secrets.SNAPCRAFT_LOGIN_FILE }}
#        run: |
#          echo "$SNAPCRAFT_LOGIN_FILE" > snap_login_file
#          snapcraft login --with snap_login_file
#
#      - name: Publish Snap
#        run: snapcraft push *.snap --release=stable
